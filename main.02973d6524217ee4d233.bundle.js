(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1106:function(module,exports,__webpack_require__){"use strict";__webpack_require__(4),__webpack_require__(50),__webpack_require__(38),__webpack_require__(32),__webpack_require__(46),__webpack_require__(1107),__webpack_require__(1108),__webpack_require__(6),__webpack_require__(39);var _clientApi=__webpack_require__(60),_clientLogger=__webpack_require__(37),_configFilename=__webpack_require__(1109);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1109:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var parameters={actions:{argTypesRegex:"^on[A-Z].*"}}},1110:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(377).configure)([__webpack_require__(1111),__webpack_require__(1113)],module,!1)}).call(this,__webpack_require__(114)(module))},1111:function(module,exports,__webpack_require__){var map={"./Introduction.stories.mdx":1112};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1111},1112:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(17),__webpack_require__(3),__webpack_require__(6),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(41),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(528);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Meta=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("div",props)}}("Meta"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)(Meta,{title:"Welcome",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("h1",{id:"react-k8s-viewer"},"react-k8s-viewer"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/socialgouv/react-k8s-viewer",target:"_blank",rel:"nofollow noopener noreferrer"}),"react-k8s-viewer")," parse kubernetes manifests and output a flow diagram using ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/wbkd/react-flow/",target:"_blank",rel:"nofollow noopener noreferrer"}),"react-flow"),"."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("p",null,"This demo website is a ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/SocialGouv/react-k8s-viewer/raw/master/demo.png",target:"_blank",rel:"nofollow noopener noreferrer"}),"storybook")," documentation."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("h3",{id:"usage"},"Usage"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("code",_extends({parentName:"pre"},{className:"language-jsx"}),'import { K8sViewer } from "@socialgouv/react-k8s-viewer";\n\nimport manifests from "./manifests.json";\n\nconst App = () => (\n  <div style={{ width: 1000, height: 400 }}>\n    <K8sViewer manifests={manifests} />\n  </div>\n);\n')),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("p",null,"See the ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/socialgouv/react-k8s-viewer",target:"_blank",rel:"nofollow noopener noreferrer"}),"README and source on GitHub")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)("img",_extends({parentName:"p"},{src:"https://github.com/SocialGouv/react-k8s-viewer/raw/master/demo.png",alt:null}))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Welcome",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_5__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},1113:function(module,exports,__webpack_require__){var map={"./component/K8SViewer.stories.tsx":1201};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1113},1193:function(module){module.exports=JSON.parse('{"apiVersion":"v1","items":[{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","deployment.kubernetes.io/revision":"1"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"app"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"creationTimestamp":null,"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"app-configmap"}}],"image":"my.registry.com/org/sample-next-app/app:2.1.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"name":"app","ports":[{"containerPort":3030,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":15,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"50m","memory":"128Mi"},"requests":{"cpu":"1m","memory":"64Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"clusterIP":"1.2.3.4","ports":[{"name":"http","port":80,"targetPort":3030}],"selector":{"app":"app"}}},{"apiVersion":"v1","data":{"ACCOUNT_MAIL_SENDER":"contact@org.com","FRONTEND_PORT":"3030","GRAPHQL_ENDPOINT":"http://hasura/v1/graphql","NODE_ENV":"production","PRODUCTION":"false"},"kind":"ConfigMap","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-configmap","namespace":"sample-next-app-85-preprod-dev2"}},{"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","kubernetes.io/ingress.class":"nginx"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"rules":[{"host":"preprod-sample-next-app.dev2.org.com","http":{"paths":[{"backend":{"serviceName":"app","servicePort":80},"path":"/","pathType":"Imple  mentationSpecific"}]}}]}}],"kind":"List","metadata":{"resourceVersion":"","selfLink":""}}')},1194:function(module){module.exports=JSON.parse('{"apiVersion":"v1","items":[{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","deployment.kubernetes.io/revision":"1"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"progressDeadlineSeconds":600,"replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"app"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"creationTimestamp":null,"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"app-configmap"}}],"image":"my.registry.com/org/sample-next-app/app:2.1.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"name":"app","ports":[{"containerPort":3030,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":15,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"50m","memory":"128Mi"},"requests":{"cpu":"1m","memory":"64Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"clusterIP":"1.2.3.4","ports":[{"name":"http","port":80,"targetPort":3030}],"selector":{"app":"app"}}}],"kind":"List","metadata":{"resourceVersion":"","selfLink":""}}')},1195:function(module){module.exports=JSON.parse('{"apiVersion":"v1","items":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"clusterIP":"1.2.3.4","ports":[{"name":"http","port":80,"targetPort":3030}],"selector":{"app":"app"}}},{"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","kubernetes.io/ingress.class":"nginx"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"rules":[{"host":"preprod-sample-next-app.dev2.org.com","http":{"paths":[{"backend":{"serviceName":"app","servicePort":80},"path":"/"}]}},{"host":"preprod2-sample-next-app.dev2.org.com","http":{"paths":[{"backend":{"serviceName":"app","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["preprod-sample-next-app.dev2.org.com","preprod2-sample-next-app.dev2.org.com"],"secretName":"wildcard-crt"}]}}],"kind":"List","metadata":{"resourceVersion":"","selfLink":""}}')},1196:function(module){module.exports=JSON.parse('{"apiVersion":"v1","items":[{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","deployment.kubernetes.io/revision":"1"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"app"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"creationTimestamp":null,"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"}},"spec":{"containers":[{"envFrom":[{"secretRef":{"name":"app-sealed-secret"}}],"image":"my.registry.com/org/sample-next-app/app:2.1.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"name":"app","ports":[{"containerPort":3030,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":15,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"50m","memory":"128Mi"},"requests":{"cpu":"1m","memory":"64Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}},{"apiVersion":"v1","data":{"ACCOUNT_EMAIL_SECRET":"xxx","HASURA_GRAPHQL_ADMIN_SECRET":"xxx","HASURA_GRAPHQL_JWT_SECRET":"xxx","SMTP_EMAIL_PASSWORD":"xxx","SMTP_EMAIL_USER":"xxx","SMTP_URL":"xxx"},"kind":"Secret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-sealed-secret","namespace":"sample-next-app-85-preprod-dev2"},"type":"Opaque"},{"apiVersion":"bitnami.com/v1alpha1","kind":"SealedSecret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-sealed-secret","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"encryptedData":{"ACCOUNT_EMAIL_SECRET":"xxx","HASURA_GRAPHQL_ADMIN_SECRET":"xxx","HASURA_GRAPHQL_JWT_SECRET":"xxx","SMTP_EMAIL_PASSWORD":"xxx","SMTP_EMAIL_USER":"xxx","SMTP_URL":"xxx"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"creationTimestamp":null,"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-sealed-secret"}}}}],"kind":"List","metadata":{"resourceVersion":"","selfLink":""}}')},1197:function(module){module.exports=JSON.parse('{"apiVersion":"v1","items":[{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","deployment.kubernetes.io/revision":"1"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"progressDeadlineSeconds":600,"replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"app"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"creationTimestamp":null,"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"}},"spec":{"containers":[{"envFrom":[{"secretRef":{"name":"app-sealed-secret"}},{"configMapRef":{"name":"app-configmap"}}],"image":"my.registry.com/org/sample-next-app/app:2.1.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"name":"app","ports":[{"containerPort":3030,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":15,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"50m","memory":"128Mi"},"requests":{"cpu":"1m","memory":"64Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}},{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","deployment.kubernetes.io/revision":"1"},"labels":{"app":"hasura","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"hasura"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"creationTimestamp":null,"labels":{"app":"hasura","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"}},"spec":{"containers":[{"envFrom":[{"secretRef":{"name":"azure-pg-user"}},{"secretRef":{"name":"hasura-sealed-secret"}},{"configMapRef":{"name":"hasura-configmap"}}],"image":"my.registry.com/org/sample-next-app/hasura:2.1.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"name":"hasura","ports":[{"containerPort":80,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":15,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","initContainers":[{"env":[{"name":"WAIT_FOR_RETRIES","value":"24"}],"envFrom":[{"secretRef":{"name":"azure-pg-user"}}],"image":"my.registry.com/org/docker/wait-for-postgres:2.0.0","imagePullPolicy":"Always","name":"wait-for-postgres","resources":{"limits":{"cpu":"20m","memory":"32Mi"},"requests":{"cpu":"5m","memory":"16Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}},{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","deployment.kubernetes.io/revision":"1"},"labels":{"app":"pgweb","application":"v2-1-5-sample-next-app","cert":"wildcard","component":"pgweb","owner":"sample-next-app","team":"sample-next-app"},"name":"pgweb","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"pgweb"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"creationTimestamp":null,"labels":{"app":"pgweb","application":"v2-1-5-sample-next-app","cert":"wildcard","component":"pgweb","owner":"sample-next-app","team":"sample-next-app"}},"spec":{"containers":[{"envFrom":[{"secretRef":{"name":"azure-pg-user"}}],"image":"sosedoff/pgweb:0.11.7","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"name":"pgweb","ports":[{"containerPort":8081,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":15,"httpGet":{"path":"/","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"500m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/","port":"http","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","initContainers":[{"env":[{"name":"WAIT_FOR_RETRIES","value":"24"}],"envFrom":[{"secretRef":{"name":"azure-pg-user"}}],"image":"my.registry.com/org/docker/wait-for-postgres:2.0.0","imagePullPolicy":"Always","name":"wait-for-postgres","resources":{"limits":{"cpu":"20m","memory":"32Mi"},"requests":{"cpu":"5m","memory":"16Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"clusterIP":"1.2.3.4","ports":[{"name":"http","port":80,"targetPort":3030}],"selector":{"app":"app"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"app":"hasura","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"clusterIP":"1.2.3.4","ports":[{"name":"http","port":80}],"selector":{"app":"hasura"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"app":"pgweb","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"pgweb","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"clusterIP":"1.2.3.4","ports":[{"name":"http","port":80,"targetPort":8081}],"selector":{"app":"pgweb"}}},{"apiVersion":"v1","data":{"ACCOUNT_MAIL_SENDER":"contact@org.com","FRONTEND_PORT":"3030","GRAPHQL_ENDPOINT":"http://hasura/v1/graphql","NODE_ENV":"production","PRODUCTION":"false"},"kind":"ConfigMap","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-configmap","namespace":"sample-next-app-85-preprod-dev2"}},{"apiVersion":"v1","data":{"ACCOUNT_EMAIL_WEBHOOK_URL":"http://app:80/api/webhooks/account","HASURA_GRAPHQL_ENABLE_CONSOLE":"true","HASURA_GRAPHQL_ENABLED_LOG_TYPES":"startup, http-log, webhook-log, websocket-log, query-log","HASURA_GRAPHQL_LOG_LEVEL":"debug","HASURA_GRAPHQL_NO_OF_RETRIES":"5","HASURA_GRAPHQL_SERVER_PORT":"80","HASURA_GRAPHQL_UNAUTHORIZED_ROLE":"anonymous"},"kind":"ConfigMap","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura-configmap","namespace":"sample-next-app-85-preprod-dev2"}},{"apiVersion":"v1","data":{"ACCOUNT_EMAIL_SECRET":"xxx","HASURA_GRAPHQL_ADMIN_SECRET":"xxx","HASURA_GRAPHQL_JWT_SECRET":"xxx","SMTP_EMAIL_PASSWORD":"xxx","SMTP_EMAIL_USER":"xxx","SMTP_URL":"xxx"},"kind":"Secret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-sealed-secret","namespace":"sample-next-app-85-preprod-dev2"},"type":"Opaque"},{"apiVersion":"v1","data":{"DATABASE_URL":"xxx","HASURA_GRAPHQL_DATABASE_URL":"xxx","PGDATABASE":"xxx","PGHOST":"xxx","PGPASSWORD":"xxx","PGSSLMODE":"xxx","PGUSER":"xxx"},"kind":"Secret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"azure-pg-user","namespace":"sample-next-app-85-preprod-dev2"},"type":"Opaque"},{"apiVersion":"v1","data":{"ACCOUNT_EMAIL_SECRET":"xxx","HASURA_GRAPHQL_ADMIN_SECRET":"xxx","HASURA_GRAPHQL_JWT_SECRET":"xxx"},"kind":"Secret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura-sealed-secret","namespace":"sample-next-app-85-preprod-dev2"},"type":"Opaque"},{"apiVersion":"v1","data":{"ca.crt":"","tls.crt":"xxx","tls.key":"xxx"},"kind":"Secret","metadata":{"annotations":{"certmanager.k8s.io/certificate-name":"wildcard-crt","certmanager.k8s.io/common-name":"*.dev2.org.com","certmanager.k8s.io/issuer-kind":"ClusterIssuer","certmanager.k8s.io/issuer-name":"letsencrypt-wildcard"},"labels":{"certmanager.k8s.io/certificate-name":"wildcard-crt"},"name":"wildcard-crt","namespace":"sample-next-app-85-preprod-dev2"},"type":"kubernetes.io/tls"},{"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","kubernetes.io/ingress.class":"nginx"},"labels":{"app":"app","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"rules":[{"host":"preprod-sample-next-app.dev2.org.com","http":{"paths":[{"backend":{"serviceName":"app","servicePort":80},"path":"/","pathType":"ImplementationSpecific"}]}}],"tls":[{"hosts":["preprod-sample-next-app.dev2.org.com"],"secretName":"wildcard-crt"}]}},{"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","kubernetes.io/ingress.class":"nginx"},"labels":{"app":"hasura","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"rules":[{"host":"hasura-preprod-sample-next-app.dev2.org.com","http":{"paths":[{"backend":{"serviceName":"hasura","servicePort":80},"path":"/","pathType":"ImplementationSpecific"}]}}],"tls":[{"hosts":["hasura-preprod-sample-next-app.dev2.org.com"],"secretName":"wildcard-crt"}]}},{"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","kubernetes.io/ingress.class":"nginx"},"labels":{"app":"pgweb","application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"pgweb","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"rules":[{"host":"pgweb-preprod-sample-next-app.dev2.org.com","http":{"paths":[{"backend":{"serviceName":"pgweb","servicePort":80},"path":"/","pathType":"ImplementationSpecific"}]}}],"tls":[{"hosts":["pgweb-preprod-sample-next-app.dev2.org.com"],"secretName":"wildcard-crt"}]}},{"apiVersion":"bitnami.com/v1alpha1","kind":"SealedSecret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-sealed-secret","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"encryptedData":{"ACCOUNT_EMAIL_SECRET":"xxx","HASURA_GRAPHQL_ADMIN_SECRET":"xxx","HASURA_GRAPHQL_JWT_SECRET":"xxx","SMTP_EMAIL_PASSWORD":"xxx","SMTP_EMAIL_USER":"xxx","SMTP_URL":"xxx"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"creationTimestamp":null,"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"app-sealed-secret"}}}},{"apiVersion":"bitnami.com/v1alpha1","kind":"SealedSecret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"azure-pg-user","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"encryptedData":{"DATABASE_URL":"xxx","HASURA_GRAPHQL_DATABASE_URL":"xxx","PGDATABASE":"xxx","PGHOST":"xxx","PGPASSWORD":"xxx","PGSSLMODE":"xxx","PGUSER":"xxx"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"creationTimestamp":null,"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"azure-pg-user"},"type":"Opaque"}}},{"apiVersion":"bitnami.com/v1alpha1","kind":"SealedSecret","metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura-sealed-secret","namespace":"sample-next-app-85-preprod-dev2"},"spec":{"encryptedData":{"ACCOUNT_EMAIL_SECRET":"xxx","HASURA_GRAPHQL_ADMIN_SECRET":"xxx","HASURA_GRAPHQL_JWT_SECRET":"xxx"},"template":{"metadata":{"annotations":{"app.gitlab.com/app":"org-sample-next-app","app.gitlab.com/env":"preprod-dev2","app.gitlab.com/env.name":"preprod-dev2","sealedsecrets.bitnami.com/cluster-wide":"true"},"creationTimestamp":null,"labels":{"application":"v2-1-5-sample-next-app","cert":"wildcard","owner":"sample-next-app","team":"sample-next-app"},"name":"hasura-sealed-secret"},"type":"Opaque"}}}],"kind":"List","metadata":{"resourceVersion":"","selfLink":""}}')},1201:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return K8SViewer_stories_Basic})),__webpack_require__.d(__webpack_exports__,"Replicas",(function(){return K8SViewer_stories_Replicas})),__webpack_require__.d(__webpack_exports__,"IngressHosts",(function(){return K8SViewer_stories_IngressHosts})),__webpack_require__.d(__webpack_exports__,"SealedSecret",(function(){return K8SViewer_stories_SealedSecret})),__webpack_require__.d(__webpack_exports__,"SampleNextApp",(function(){return K8SViewer_stories_SampleNextApp}));__webpack_require__(3);var jsx_runtime=__webpack_require__(29),react=__webpack_require__(0),react_default=__webpack_require__.n(react),ReactFlow_esm=__webpack_require__(56),dagre=(__webpack_require__(17),__webpack_require__(6),__webpack_require__(16),__webpack_require__(85),__webpack_require__(38),__webpack_require__(19),__webpack_require__(23),__webpack_require__(39),__webpack_require__(335)),dagre_default=__webpack_require__.n(dagre);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_require__(50),__webpack_require__(25),__webpack_require__(14),__webpack_require__(51),__webpack_require__(5),__webpack_require__(13),__webpack_require__(100);function parseManifests_toConsumableArray(arr){return function parseManifests_arrayWithoutHoles(arr){if(Array.isArray(arr))return parseManifests_arrayLikeToArray(arr)}(arr)||function parseManifests_iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function parseManifests_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return parseManifests_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return parseManifests_arrayLikeToArray(o,minLen)}(arr)||function parseManifests_nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function parseManifests_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var defaultPositions={position:{x:0,y:0},sourcePosition:ReactFlow_esm.b.Right,targetPosition:ReactFlow_esm.b.Left},getFlowNode=function getFlowNode(manifest){var _manifest$metadata,_manifest$metadata2;return Object.assign({id:"".concat(manifest.kind,"-").concat((null==manifest||null===(_manifest$metadata=manifest.metadata)||void 0===_manifest$metadata?void 0:_manifest$metadata.namespace)||"","-").concat((null==manifest||null===(_manifest$metadata2=manifest.metadata)||void 0===_manifest$metadata2?void 0:_manifest$metadata2.name)||"")},defaultPositions)},getManifestNodes=function getManifestNodes(manifest){return manifest.spec.template.spec.volumes&&manifest.spec.template.spec.volumes.filter((function(volume){return!volume.name.match(/^default-token-/)})).map((function(volume){return function createVolumeNode(manifest,volume){var _manifest$metadata3,volumeName=volume.azureFile&&volume.azureFile.shareName||volume.configMap&&volume.configMap.name||volume.name,volumeId="volume-".concat(null==manifest||null===(_manifest$metadata3=manifest.metadata)||void 0===_manifest$metadata3?void 0:_manifest$metadata3.namespace,"-").concat(volumeName);return Object.assign({id:volumeId},defaultPositions,{data:Object.assign({label:"💾 ".concat(volumeName)},volume)})}(manifest,volume)}))||[]},manifestsTypes={Ingress:function Ingress(manifest){return[Object.assign({},getFlowNode(manifest),{type:"ingress",data:{label:manifest.spec.rules.map((function(rule){return"🌍 ".concat(rule.host)})).join("<br>"),manifest:manifest}})]},Service:function Service(manifest){var _manifest$metadata4;return[Object.assign({},getFlowNode(manifest),{data:{label:"🚦 ".concat(manifest.kind," ").concat(null==manifest||null===(_manifest$metadata4=manifest.metadata)||void 0===_manifest$metadata4?void 0:_manifest$metadata4.name),manifest:manifest}})]},Secret:function Secret(manifest){var _manifest$metadata5;return[Object.assign({},getFlowNode(manifest),{type:"output",data:{label:"🔓 ".concat(null==manifest||null===(_manifest$metadata5=manifest.metadata)||void 0===_manifest$metadata5?void 0:_manifest$metadata5.name),manifest:manifest}})]},SealedSecret:function SealedSecret(manifest){var _manifest$metadata6;return[Object.assign({},getFlowNode(manifest),{type:"input",data:{label:"🔐 ".concat(null==manifest||null===(_manifest$metadata6=manifest.metadata)||void 0===_manifest$metadata6?void 0:_manifest$metadata6.name),manifest:manifest}})]},ConfigMap:function ConfigMap(manifest){var _manifest$metadata7;return[Object.assign({},getFlowNode(manifest),{type:"output",data:{label:"🗒 ".concat(null==manifest||null===(_manifest$metadata7=manifest.metadata)||void 0===_manifest$metadata7?void 0:_manifest$metadata7.name),manifest:manifest}})]},ServiceMonitor:function ServiceMonitor(manifest){var _manifest$metadata8;return[Object.assign({},getFlowNode(manifest),{data:{label:"📊 ".concat(null==manifest||null===(_manifest$metadata8=manifest.metadata)||void 0===_manifest$metadata8?void 0:_manifest$metadata8.name),manifest:manifest}})]},Deployment:function Deployment(manifest){var volumes=getManifestNodes(manifest),replicas=manifest.spec.replicas||1;return[].concat(parseManifests_toConsumableArray(volumes),parseManifests_toConsumableArray(Array.from({length:replicas},(function(k,v){var _manifest$metadata9,node=getFlowNode(manifest);return Object.assign({},node,{id:node.id+"-".concat(v),data:{label:"📦 ".concat(null==manifest||null===(_manifest$metadata9=manifest.metadata)||void 0===_manifest$metadata9?void 0:_manifest$metadata9.name),manifest:manifest}})}))))},CronJob:function CronJob(manifest){var _manifest$metadata10,volumes=getManifestNodes(manifest);return[].concat(parseManifests_toConsumableArray(volumes),[Object.assign({},getFlowNode(manifest),{data:{label:"⏳ ".concat(null==manifest||null===(_manifest$metadata10=manifest.metadata)||void 0===_manifest$metadata10?void 0:_manifest$metadata10.name),manifest:manifest}})])},Job:function Job(manifest){var _manifest$metadata11,volumes=getManifestNodes(manifest);return[].concat(parseManifests_toConsumableArray(volumes),[Object.assign({},getFlowNode(manifest),{data:{label:"⚡️ ".concat(null==manifest||null===(_manifest$metadata11=manifest.metadata)||void 0===_manifest$metadata11?void 0:_manifest$metadata11.name),manifest:manifest}})])}},createEdge=function createEdge(source,target){var opts=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return source?target?Object.assign({id:"edge-".concat(source.id,"-").concat(target.id),source:source.id,target:target.id},opts):(console.log("createEdge.error target",target,opts),null):(console.log("createEdge.error source",source,opts),null)},getElements=function getElements(elements,filters){return elements.filter((function(e){var _e$data$manifest,_e$data$manifest$meta;if(!(e&&e.data&&e.data.manifest))return!1;var isKind=!filters.kind||e.data.manifest.kind===filters.kind,isName=!filters.name||(null===(_e$data$manifest=e.data.manifest)||void 0===_e$data$manifest||null===(_e$data$manifest$meta=_e$data$manifest.metadata)||void 0===_e$data$manifest$meta?void 0:_e$data$manifest$meta.name)===filters.name;return isKind&&isName}))},HtmlFlowNode_HtmlFlowNode=function HtmlFlowNode(_ref){var data=_ref.data;return Object(jsx_runtime.jsxs)("div",{style:{whiteSpace:"nowrap",overflow:"hidden"},className:"react-flow__node-default react-flow__node-input react-flow__node-output",title:data.label,children:[Object(jsx_runtime.jsx)(ReactFlow_esm.a,{type:"target",position:ReactFlow_esm.b.Left}),Object(jsx_runtime.jsx)("div",{dangerouslySetInnerHTML:{__html:data.label}}),Object(jsx_runtime.jsx)(ReactFlow_esm.a,{type:"source",position:ReactFlow_esm.b.Right})]})};HtmlFlowNode_HtmlFlowNode.displayName="HtmlFlowNode";try{HtmlFlowNode_HtmlFlowNode.displayName="HtmlFlowNode",HtmlFlowNode_HtmlFlowNode.__docgenInfo={description:"",displayName:"HtmlFlowNode",props:{data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"AnyObject"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/HtmlFlowNode.tsx#HtmlFlowNode"]={docgenInfo:HtmlFlowNode_HtmlFlowNode.__docgenInfo,name:"HtmlFlowNode",path:"src/component/HtmlFlowNode.tsx#HtmlFlowNode"})}catch(__react_docgen_typescript_loader_error){}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var onLoad=function onLoad(reactFlowInstance){reactFlowInstance.fitView()},K8sViewer_K8sViewer=function K8sViewer(_ref){var manifests=_ref.manifests,props=_objectWithoutProperties(_ref,["manifests"]);if(!manifests)return Object(jsx_runtime.jsx)("div",{children:"Invalid manifests"});var elements=function parseManifests(manifests){var elements=[],allManifests=Array.isArray(manifests)&&manifests[0].items||void 0!==manifests.items&&manifests.items||manifests;if(allManifests.forEach((function(manifest){var definition=manifestsTypes[manifest.kind];definition&&definition(manifest).filter(Boolean).forEach((function(node){elements.find((function(n){return n.id===node.id}))||elements.push(node)}))})),allManifests.find((function(m){return"Ingress"===m.kind}))){var internetNode=Object.assign({},defaultPositions,{id:"Internet",type:"input",data:{label:"🌥 Internet"}});elements.push(internetNode),allManifests.filter((function(manifest){return"Ingress"===manifest.kind})).filter((function(manifest){return manifest.spec.rules[0].host})).forEach((function(manifest){var _manifest$metadata12,ingressNode=getElements(elements,{kind:"Ingress",name:null==manifest||null===(_manifest$metadata12=manifest.metadata)||void 0===_manifest$metadata12?void 0:_manifest$metadata12.name})[0],edge=createEdge(internetNode,ingressNode,{label:manifest.spec.tls&&manifest.spec.tls.length?"TLS":""});edge&&elements.push(edge);manifest.spec.rules.filter((function isValidRule(rule){return rule.http&&rule.http.paths.length&&rule.http.paths[0].backend.serviceName})).forEach((function(rule){var _rule$http,name=null==rule||null===(_rule$http=rule.http)||void 0===_rule$http?void 0:_rule$http.paths[0].backend.serviceName,serviceNode=getElements(elements,{kind:"Service",name:name})[0],edge=createEdge(ingressNode,serviceNode);edge&&elements.push(edge)})),manifest.spec.tls&&manifest.spec.tls.forEach((function(tls){if(tls.secretName){var secretNode=getElements(elements,{kind:"Secret",name:tls.secretName})[0],_edge=createEdge(ingressNode,secretNode,{defaultTargetLabel:tls.secretName});_edge&&elements.push(_edge)}}))}))}return allManifests.filter((function(manifest){return"Service"===manifest.kind})).forEach((function(manifest){var _manifest$metadata13,targetDeploymentName=manifest.spec.selector.app||manifest.spec.selector["app.kubernetes.io/instance"]+"-"+manifest.spec.selector["app.kubernetes.io/name"],serviceNode=getElements(elements,{kind:"Service",name:null==manifest||null===(_manifest$metadata13=manifest.metadata)||void 0===_manifest$metadata13?void 0:_manifest$metadata13.name})[0];getElements(elements,{kind:"Deployment",name:targetDeploymentName}).forEach((function(deploymentNode){var edge=createEdge(serviceNode,deploymentNode,{animated:!0});edge&&elements.push(edge)}))})),allManifests.filter((function(manifest){return"SealedSecret"===manifest.kind})).forEach((function(manifest){var _manifest$metadata14,_manifest$metadata15,secretNode=getElements(elements,{kind:"Secret",name:null==manifest||null===(_manifest$metadata14=manifest.metadata)||void 0===_manifest$metadata14?void 0:_manifest$metadata14.name})[0],sealedSecretNode=getElements(elements,{kind:"SealedSecret",name:null==manifest||null===(_manifest$metadata15=manifest.metadata)||void 0===_manifest$metadata15?void 0:_manifest$metadata15.name})[0],edge=createEdge(sealedSecretNode,secretNode);edge&&elements.push(edge)})),allManifests.filter((function(manifest){return"ServiceMonitor"===manifest.kind})).forEach((function(manifest){var _manifest$metadata16,serviceMonitorNode=getElements(elements,{kind:"ServiceMonitor",name:null==manifest||null===(_manifest$metadata16=manifest.metadata)||void 0===_manifest$metadata16?void 0:_manifest$metadata16.name})[0],serviceNode=getElements(elements,{kind:"Service",name:manifest.spec.selector.matchLabels.app})[0],edge=createEdge(serviceMonitorNode,serviceNode,{animated:!0});edge&&elements.push(edge)})),allManifests.filter((function(manifest){return"Job"===manifest.kind||"CronJob"===manifest.kind||"Deployment"===manifest.kind})).forEach((function(manifest){var _manifest$metadata17;getElements(elements,{kind:manifest.kind,name:null==manifest||null===(_manifest$metadata17=manifest.metadata)||void 0===_manifest$metadata17?void 0:_manifest$metadata17.name}).forEach((function(manifestNode){manifest.spec.template.spec.imagePullSecrets&&manifest.spec.template.spec.imagePullSecrets.forEach((function(pullSecret){var secretNode=getElements(elements,{kind:"Secret",name:pullSecret.name})[0],edge=createEdge(manifestNode,secretNode,{type:"smoothstep",data:{label:"Secret ".concat(pullSecret.name)}});edge&&elements.push(edge)})),manifest.spec.template.spec.volumes&&manifest.spec.template.spec.volumes.filter((function(volume){return!volume.name.match(/^default-token-/)})).forEach((function(volume){var _manifest$metadata18,volumeNode=function getVolume(elements,namespace,volume){var volumeName=volume.azureFile&&volume.azureFile.shareName||volume.configMap&&volume.configMap.name||volume.name,volumeId="volume-".concat(namespace,"-").concat(volumeName);return elements.find((function(e){return e.id&&e.id===volumeId}))}(elements,null==manifest||null===(_manifest$metadata18=manifest.metadata)||void 0===_manifest$metadata18?void 0:_manifest$metadata18.namespace,volume);if(volumeNode){var edge=createEdge(manifestNode,volumeNode,{type:"smoothstep"});if(edge&&elements.push(edge),volume.configMap){var configMapNode=getElements(elements,{kind:"ConfigMap",name:volume.configMap.name})[0],_edge2=createEdge(volumeNode,configMapNode,{type:"smoothstep",data:Object.assign({label:"ConfigMap ".concat(volume.configMap.name)},volume)});_edge2&&elements.push(_edge2)}if(volume.azureFile){var secretNode=getElements(elements,{kind:"Secret",name:volume.azureFile.secretName})[0],_edge3=createEdge(volumeNode,secretNode,{type:"smoothstep",data:Object.assign({label:"Secret ".concat(volume.azureFile.secretName)},volume)});_edge3&&elements.push(_edge3)}}})),manifest.spec.template.spec.containers.forEach((function(container){container.envFrom&&container.envFrom.forEach((function(envFrom){if(envFrom.secretRef){var secretNode=getElements(elements,{kind:"Secret",name:envFrom.secretRef.name})[0],edge=createEdge(manifestNode,secretNode,{type:"smoothstep",data:{label:"Secret ".concat(envFrom.secretRef.name)}});edge&&elements.push(edge)}if(envFrom.configMapRef){var configMapNode=getElements(elements,{kind:"ConfigMap",name:envFrom.configMapRef.name})[0],_edge4=createEdge(manifestNode,configMapNode,{type:"smoothstep",data:{label:"ConfigMap ".concat(envFrom.configMapRef.name)}});_edge4&&elements.push(_edge4)}})),container.env&&container.env.forEach((function(env){if(env.valueFrom)if(env.valueFrom.secretKeyRef){var secretNode=getElements(elements,{kind:"Secret",name:env.valueFrom.secretKeyRef.name})[0],edge=createEdge(manifestNode,secretNode,{type:"smoothstep",data:{label:"Secret ".concat(env.valueFrom.secretKeyRef.name)}});edge&&elements.push(edge)}else if(env.valueFrom.configMapKeyRef){var configMapNode=getElements(elements,{kind:"Secret",name:env.valueFrom.configMapKeyRef.name})[0],_edge5=createEdge(manifestNode,configMapNode,{type:"smoothstep",data:{label:"ConfigMap ".concat(env.valueFrom.configMapKeyRef.name)}});_edge5&&elements.push(_edge5)}}))}))}))})),elements.filter(Boolean)}(manifests),flow=function makeLayout(elements){var g=new dagre_default.a.graphlib.Graph;g.setGraph({rankdir:"LR",align:"DR",edgesep:20}),g.setDefaultEdgeLabel((function(){return{}})),elements.forEach((function(e){e.source&&e.target?g.setEdge(e.source,e.target):g.setNode(e.id,{label:e.data&&e.data.label||"",element:e,id:e.id,sourcePosition:e.sourcePosition,targetPosition:e.targetPosition,width:200,height:50})})),dagre_default.a.layout(g);var nodes=g.nodes().map((function(i){var n=g.node(i);return Object.assign({},n.element,{connectable:!1,position:{x:n.x-n.width/2,y:n.y-n.height/2}})})),edges=g.edges().map((function(e){var source=elements.find((function(element){return element.source&&e.v&&element.source===e.v&&element.target&&e.w&&element.target===e.w}));return{id:"__".concat(e.v,"__").concat(e.w),label:source&&source.label||e&&e.label,points:g.edge(e).points,source:e.v,target:e.w,type:"auto",animated:/^(ingress|service)/i.exec(e.w)||/^(service)/i.exec(e.v)}}));return console.log({nodes:nodes,edges:edges}),[].concat(_toConsumableArray(nodes),_toConsumableArray(edges))}(elements);return console.log({manifests:manifests,elements:elements,flow:flow}),Object(jsx_runtime.jsx)(react_default.a.Fragment,{children:Object(jsx_runtime.jsx)(ReactFlow_esm.d,Object.assign({nodeTypes:{ingress:HtmlFlowNode_HtmlFlowNode},onLoad:onLoad,paneMoveable:!0,nodesDraggable:!0,elementsSelectable:!1,nodesConnectable:!1},props,{elements:flow}))})};K8sViewer_K8sViewer.displayName="K8sViewer";try{K8sViewer_K8sViewer.displayName="K8sViewer",K8sViewer_K8sViewer.__docgenInfo={description:"",displayName:"K8sViewer",props:{manifests:{defaultValue:null,description:"",name:"manifests",required:!0,type:{name:"ManifestList | Manifest[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/K8sViewer.tsx#K8sViewer"]={docgenInfo:K8sViewer_K8sViewer.__docgenInfo,name:"K8sViewer",path:"src/component/K8sViewer.tsx#K8sViewer"})}catch(__react_docgen_typescript_loader_error){}var K8SViewer_stories_Basic=function Basic(){return Object(jsx_runtime.jsx)("div",{style:{height:200},children:Object(jsx_runtime.jsx)(ReactFlow_esm.c,{children:Object(jsx_runtime.jsx)(K8sViewer_K8sViewer,{manifests:__webpack_require__(1193)})})})};K8SViewer_stories_Basic.displayName="Basic";var K8SViewer_stories_Replicas=function Replicas(){return Object(jsx_runtime.jsx)("div",{style:{height:200},children:Object(jsx_runtime.jsx)(ReactFlow_esm.c,{children:Object(jsx_runtime.jsx)(K8sViewer_K8sViewer,{manifests:__webpack_require__(1194)})})})};K8SViewer_stories_Replicas.displayName="Replicas";var K8SViewer_stories_IngressHosts=function IngressHosts(){return Object(jsx_runtime.jsx)("div",{style:{height:300},children:Object(jsx_runtime.jsx)(ReactFlow_esm.c,{children:Object(jsx_runtime.jsx)(K8sViewer_K8sViewer,{manifests:__webpack_require__(1195)})})})};K8SViewer_stories_IngressHosts.displayName="IngressHosts";var K8SViewer_stories_SealedSecret=function SealedSecret(){return Object(jsx_runtime.jsx)("div",{style:{height:200},children:Object(jsx_runtime.jsx)(ReactFlow_esm.c,{children:Object(jsx_runtime.jsx)(K8sViewer_K8sViewer,{manifests:__webpack_require__(1196)})})})};K8SViewer_stories_SealedSecret.displayName="SealedSecret";var K8SViewer_stories_SampleNextApp=function SampleNextApp(){return Object(jsx_runtime.jsx)("div",{style:{height:700},children:Object(jsx_runtime.jsx)(ReactFlow_esm.c,{children:Object(jsx_runtime.jsx)(K8sViewer_K8sViewer,{manifests:__webpack_require__(1197)})})})};K8SViewer_stories_SampleNextApp.displayName="SampleNextApp";__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport { ReactFlowProvider } from "react-flow-renderer";\nimport { Meta } from "@storybook/react/types-6-0";\n\nimport { K8sViewer } from "./K8sViewer";\n\nexport const Basic: React.FC<{}> = () => (\n  <div style={{ height: 200 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/basic.json")} />\n    </ReactFlowProvider>\n  </div>\n);\n\nexport const Replicas: React.FC<{}> = () => (\n  <div style={{ height: 200 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/replicas.json")} />\n    </ReactFlowProvider>\n  </div>\n);\n\nexport const IngressHosts: React.FC<{}> = () => (\n  <div style={{ height: 300 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/ingress-hosts.json")} />\n    </ReactFlowProvider>\n  </div>\n);\n\nexport const SealedSecret: React.FC<{}> = () => (\n  <div style={{ height: 200 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/sealed-secret.json")} />\n    </ReactFlowProvider>\n  </div>\n);\n\n// Secondary will be the name for the second story\nexport const SampleNextApp: React.FC<{}> = () => (\n  <div style={{ height: 700 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/sample-next-app.json")} />\n    </ReactFlowProvider>\n  </div>\n);\n\nexport default {\n  title: "K8sViewer", // Title of you main menu entry for this group of stories\n  component: K8sViewer, // This is the component documented by this Storybook page\n} as Meta;\n',locationsMap:{basic:{startLoc:{col:35,line:7},endLoc:{col:1,line:13},startBody:{col:35,line:7},endBody:{col:1,line:13}},replicas:{startLoc:{col:38,line:15},endLoc:{col:1,line:21},startBody:{col:38,line:15},endBody:{col:1,line:21}},"ingress-hosts":{startLoc:{col:42,line:23},endLoc:{col:1,line:29},startBody:{col:42,line:23},endBody:{col:1,line:29}},"sealed-secret":{startLoc:{col:42,line:31},endLoc:{col:1,line:37},startBody:{col:42,line:31},endBody:{col:1,line:37}},"sample-next-app":{startLoc:{col:43,line:40},endLoc:{col:1,line:46},startBody:{col:43,line:40},endBody:{col:1,line:46}}}}},title:"K8sViewer",component:K8sViewer_K8sViewer};K8SViewer_stories_Basic.parameters=Object.assign({storySource:{source:'() => (\n  <div style={{ height: 200 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/basic.json")} />\n    </ReactFlowProvider>\n  </div>\n)'}},K8SViewer_stories_Basic.parameters),K8SViewer_stories_Replicas.parameters=Object.assign({storySource:{source:'() => (\n  <div style={{ height: 200 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/replicas.json")} />\n    </ReactFlowProvider>\n  </div>\n)'}},K8SViewer_stories_Replicas.parameters),K8SViewer_stories_IngressHosts.parameters=Object.assign({storySource:{source:'() => (\n  <div style={{ height: 300 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/ingress-hosts.json")} />\n    </ReactFlowProvider>\n  </div>\n)'}},K8SViewer_stories_IngressHosts.parameters),K8SViewer_stories_SealedSecret.parameters=Object.assign({storySource:{source:'() => (\n  <div style={{ height: 200 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/sealed-secret.json")} />\n    </ReactFlowProvider>\n  </div>\n)'}},K8SViewer_stories_SealedSecret.parameters),K8SViewer_stories_SampleNextApp.parameters=Object.assign({storySource:{source:'() => (\n  <div style={{ height: 700 }}>\n    <ReactFlowProvider>\n      <K8sViewer manifests={require("../../fixtures/sample-next-app.json")} />\n    </ReactFlowProvider>\n  </div>\n)'}},K8SViewer_stories_SampleNextApp.parameters);try{K8SViewer_stories_Basic.displayName="Basic",K8SViewer_stories_Basic.__docgenInfo={description:"",displayName:"Basic",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/K8SViewer.stories.tsx#Basic"]={docgenInfo:K8SViewer_stories_Basic.__docgenInfo,name:"Basic",path:"src/component/K8SViewer.stories.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}try{K8SViewer_stories_Replicas.displayName="Replicas",K8SViewer_stories_Replicas.__docgenInfo={description:"",displayName:"Replicas",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/K8SViewer.stories.tsx#Replicas"]={docgenInfo:K8SViewer_stories_Replicas.__docgenInfo,name:"Replicas",path:"src/component/K8SViewer.stories.tsx#Replicas"})}catch(__react_docgen_typescript_loader_error){}try{K8SViewer_stories_IngressHosts.displayName="IngressHosts",K8SViewer_stories_IngressHosts.__docgenInfo={description:"",displayName:"IngressHosts",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/K8SViewer.stories.tsx#IngressHosts"]={docgenInfo:K8SViewer_stories_IngressHosts.__docgenInfo,name:"IngressHosts",path:"src/component/K8SViewer.stories.tsx#IngressHosts"})}catch(__react_docgen_typescript_loader_error){}try{K8SViewer_stories_SealedSecret.displayName="SealedSecret",K8SViewer_stories_SealedSecret.__docgenInfo={description:"",displayName:"SealedSecret",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/K8SViewer.stories.tsx#SealedSecret"]={docgenInfo:K8SViewer_stories_SealedSecret.__docgenInfo,name:"SealedSecret",path:"src/component/K8SViewer.stories.tsx#SealedSecret"})}catch(__react_docgen_typescript_loader_error){}try{K8SViewer_stories_SampleNextApp.displayName="SampleNextApp",K8SViewer_stories_SampleNextApp.__docgenInfo={description:"",displayName:"SampleNextApp",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/component/K8SViewer.stories.tsx#SampleNextApp"]={docgenInfo:K8SViewer_stories_SampleNextApp.__docgenInfo,name:"SampleNextApp",path:"src/component/K8SViewer.stories.tsx#SampleNextApp"})}catch(__react_docgen_typescript_loader_error){}},531:function(module,exports,__webpack_require__){__webpack_require__(532),__webpack_require__(696),__webpack_require__(697),__webpack_require__(843),__webpack_require__(1047),__webpack_require__(1080),__webpack_require__(1085),__webpack_require__(1097),__webpack_require__(1099),__webpack_require__(1104),__webpack_require__(1106),module.exports=__webpack_require__(1110)},605:function(module,exports){},697:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(377)}},[[531,1,2]]]);
//# sourceMappingURL=main.02973d6524217ee4d233.bundle.js.map